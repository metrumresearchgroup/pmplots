---
title: "Standardized diagnostics with pmplots"
format: 
  html: 
    toc: true
    embed-resources: true
---

```{r include = FALSE}
knitr::opts_chunk$set(message = FALSE, fig.align = "center")
```

# Goals

- start making more standardized displays
- start using composite graphics showing several diagnostics on a single page

We don't always _need_ to be doing the standard; there is plenty of room to 
customize these plots to get what you want. But if we could agree on a few 
plots that will cover 80 or 90% of the cases, it would be a win for 

- ease of QC
- consistency within and across reports

# Overview

This feature set provides standardized displays of diagnostics, including

- ETA versus covariates
- NPDE or CWRES versus covariates
- NPDE or CWRES diagnostics as 
  - single, comprehensive panel
  - just scatter plots
  - just histogram and QQ plots

In addition to these standard displays, the user can get an object back 
which is a list of the component plots for the standardized displays 
that you can arrange yourself. 


```{r}
library(pmplots)
data <- pmplots_data_obs()
id <- pmplots_data_id()

cont <- c("WT//Weight (kg)", "AGE//Age (years)")
cat <- c("CPc//Child-Pugh", "STUDYc//Study")
covs <- c(cont,cat)
etas <- c("ETA1//ETA-CL", "ETA2//ETA-V", "ETA3//ETA-KA")
```


# ETA versus covariates

The basic / default behavior is to get a list of arranged plots, one for each `ETA`

```{r}
p <- eta_covariate(id, x = covs, y = etas)

names(p) 

p$ETA1
```

We can label the panels; thinking about making this the default

```{r}
p <- eta_covariate(id, x = covs, y = etas, tag_levels = "A")

p$ETA1
```


We can arrange this by column instead

```{r}
p <- eta_covariate(id, x = covs, y = etas, tag_levels = "A", byrow = FALSE)

p$ETA1
```

Or we can group by the covariate rather than the `ETA` using the `transpose` 
argument

```{r}
p <- eta_covariate(id, x = covs, y = etas, tag_levels = "A", transpose = TRUE)

names(p)
```

Now, we have all the `ETAs` for each covariate on the same page
```{r}
p$AGE
```

and

```{r}
p$CPc
```


We can make a custom arrangement using the `patchwork` arrangement operators

```{r}
#| fig-height: 8
p <- eta_covariate_list(id, x = covs, y = etas)

with(p$ETA1, (WT / (CPc + STUDYc) / AGE), tag_levels = "A")
```


# Standard NPDE diagnostics

You can get everything in on plot; might be too much for a report, but could be 
handy for your model checkout script

```{r}
#| fig-height: 8
npde_panel(data, tag_levels="A")
```

or just the histogram and qq plot

```{r}
#| fig-width: 4
#| fig-height: 6
npde_hist_q(data, tag_levels = "A")
```

or just the scatter plots in long format

```{r}
#| fig-height: 8
#| fig-width: 5
npde_scatter(data, tag_levels = "A")
```

or compact format

```{r}
#| fig-width: 6
#| fig-height: 6
npde_scatter(data, tag_levels = "A", compact = TRUE)
```


You can also customize the layout to be whatever you want

```{r}
#| fig-width: 7
plots <- npde_panel_list(data)

with(plots, time / (hist + q + tad), tag_levels = "A") 
```


And there is some customization for the plot axes and titles

```{r}
#| fig-width: 5
#| fig-height: 7
npde_scatter(
  data, 
  xby_tad = 12, 
  xby_time = 48,
  xname = "concentration", 
  tag_levels = 1
)
```

# NPDE versus covariates

This works like `eta_covariate()`

```{r}
#| fig-width: 6
#| fig-height: 7
npde_covariate(data, covs, tag_levels = "a", byrow = FALSE)
```

```{r}
#| fig-width: 6
#| fig-height: 7
plots <- npde_covariate_list(data, covs)

names(plots)

with(plots, (AGE + WT) / CPc / STUDYc, tag_levels = "i")
```


# Standard CWRES diagnostics

The behavior / feature set looks just like the `NPDE` plots for both 
standard diagnostics and covariates. 

I want to think about abbreviating `CWRES` like we do `NPDE`; axis titles would 
fit much better in lots of situations.


```{r}
#| fig-width: 6
#| fig-height: 6
cwres_scatter(data, tag_levels = "A", compact = TRUE)
```

